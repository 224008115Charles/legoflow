@charset "UTF-8";
/*
 * 基础模块 & 全局变量配置
 * 
 * 字体策略
 * 1. 默认：使用无衬线体，OSX中文使用苹方与冬青黑体，Windows中文使用微软雅黑，Linux中文使用文泉雅黑；
 * 2. 黑体：通过字体辅助类.u-heiti 或者 @extend %u-heiti来调用；
 * 3. 宋体：通过字体辅助类.u-songti 或者 @extend %u-songti来调用；
 * 3. 楷体：通过字体辅助类.u-kaiti 或者 @extend %u-kaiti来调用；
 * 4. 参考链接：http://www.zhihu.com/question/19911793   http://zenozeng.github.io/fonts.css/
 *
 */
/**
 * @name:      SASS常用Function与Mixins
 * @copyright: MIT License
*/
/* ==========================================================================
   SASS function
   ========================================================================== */
/*
 * @name:  px转em
 * @param: $px {string}  对齐类型
 * @param: $base-font-size {dimension}  基准字号大小
 */
/*
 * @name:  半透明颜色
 * @param: $opacity {number}  透明度值
 */
/* ==========================================================================
   SASS mixins
   ========================================================================== */
/*
 * @name:    BEM模块
 * @param:   $elementSeparator {string}  BE连接符
 * @param:   $modifierSeparator {string}  M连接符
 * @param:   $selector {string}  类名
 * @thanks:  https://medium.com/@marcmintel/pushing-bem-to-the-next-level-with-sass-3-4-5239d2371321 by @Marcmintel(https://twitter.com/marcmintel)
 * @expamle:
    ============= user =============
    @include b(block) {
        background: red;
        @include e(header){
            font-size: 14px;
            @include m(css) {
                font-size: 18px;
            }
        };
        @include m(book) {
            color: blue;
            @include e(kindlebook) {
                background: gray;
            }
        }
    }
    ============= output =============
    .block {
        background: red;
    }
    .block__header {
        font-size: 14px;
    }
    .block__header--css {
        font-size: 18px;
    }
    .block--book {
        color: blue;
    }
    .block--book .block__kindlebook {
        background: gray;
    }
 */
/* @name: 重置 */
/*
 * @name:  inline-block
 * @param: $alignment {string}  对齐类型
 * @param: $support-for-ie {boolean}  是否支持IE6
 */
/* @name: 闭合浮动 */
/*
 * @name:  浮动
 * @param: $side {string}  浮动方向
 * @param: $support-for-ie {boolean}  是否支持IE6
 */
/*
 * @name:  文本隐藏 (text-indent: -9999px;有性能问题)
 * @param: $support-for-ie {boolean}  是否支持IE6
 */
/*
 * @name:  隐藏增加可访问性的文字，注意与hide-text的区别是，他隐藏整个元素
 * @param: $support-for-ie {boolean}  是否支持IE6
 */
/*
 * @name:  图片代替文字
 * @param: $support-for-ie {boolean}  是否支持IE6
 */
/*
 * @name:  文字溢出显示省略号
 * @param: $width {dimension}  指定宽度 (需带单位)
 */
/*
 * @name: 强制不换行
 * @link: http://www.hicss.net/solve-change-line-in-css
 */
/* @name: 连续字符换行 */
/* @name: 阻止长字符串（例如url或无意义连续英文字符）打破布局 */
/*
 * @name:  resizable
 * @param: $direction {string}  缩放的方向 (horizontal || vertical || both)
 * @link:  https://github.com/twbs/bootstrap-sass/blob/master/assets/stylesheets/bootstrap/mixins/_resize.scss
 * @1:     Per CSS3 UI, `resize` only applies when `overflow` isn't `visible`
 */
/*
 * @name:  最小高度
 * @param: $height {dimension}  最小高度
 */
/*
 * @name:  背景透明
 * @param: $color {color}  颜色
 * @param: $opacity {number}  透明度
 * @param: $support-for-ie {boolean}  是否支持IE6
 * @link:  https://github.com/airen/Sass_mixins_function/tree/master/mixins
 */
/*
 * @name:  背景线性渐变
 * @param: $startColor {number}  渐变始点颜色
 * @param: $endColor {boolean}  渐变终点颜色
 * @param: $direction {color}  渐变方向
 */
/*
 * @name:  透明度
 * @param: $opacity {number}  透明度
 * @param: $support-for-ie {boolean}  是否支持IE6
 */
/* @name: 重置滤镜 */
/*
 * @name:  液态比例缩放
 * @param: $large-size {dimension}  背景图片大尺寸
 * @param: $small-size {dimension}  背景图片小尺寸
 * @link:  http://voormedia.com/blog/2012/11/responsive-background-images-with-fixed-or-fluid-aspect-ratios
 */
/*
 * @name:  border三角形
 * @param: $base {dimension}  底边尺寸
 * @param: $height {dimension}  高度
 * @param: $color {color}  颜色
 * @param: $direction {string}  方向 (top || bottom || left || right)
 * @link:  http://codepen.io/zhouwenbin/pen/emZVZp
 */
/* ==========================================================================
   媒体查询@Media Queries
   ========================================================================== */
/*
 * @name:       媒体查询
 * @thanks:     http://paranoida.com/　by @Rafal Bromirski (http://twitter.com/paranoida)
 * @resolution: http://screensiz.es/tablet
 * @link:       http://www.stephen.io/mediaqueries/
 */
/* ========= Screen ========= */
/* ========= hdpi ========= */
/* ========= iPhone5 ========= */
/* ========= iPhone4 ========= */
/* ========= iPhone3 ========= */
/* ========= iPad All ========= */
/* ========= iPad Mini ========= */
/* ========= iPad Retina ========= */
/* normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
/* Document
   ========================================================================== */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

/*
 * @file: 重置样式
 */
/* 去除现代浏览器图片底部的空隙 */
img {
  vertical-align: top; }

em {
  font-style: normal; }

ol, ul, menu {
  list-style: none outside none; }

fieldset, iframe {
  border: 0 none; }

dl, dt, dd, ul, ol, li,
h1, h2, h3, h4, h5, h6,
pre, code, blockquote,
form, fieldset, legend, input, button, textarea,
th, td, hr, p,
article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0; }

/* IE6 7 8(q) bug 显示为行内表现 */
iframe {
  display: block; }

/* IE bug fixed: th 不继承 text-align */
th {
  text-align: inherit; }

/* 修正表单元素不继承父级字体族的问题 */
input, button, select, textarea {
  font-family: "San Francisco", "Helvetica Neue", Helvetica, Arial, "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei", "WenQuanYi Micro Hei", sans-serif; }

/**
 * 移除 IE6-11 中默认的垂直滚动条
 * 禁止水平拖动，防止破坏布局
 */
textarea {
  resize: vertical;
  overflow: auto;
  /* 1 */ }

/**
 * 修正 Firefox 19+ Placeholder 设置了opacity 的问题
 */
input::-moz-placeholder,
textarea::-moz-placeholder {
  color: darkGray;
  opacity: 1; }

/* 一致的 del 样式 */
del {
  text-decoration: line-through; }

abbr {
  cursor: help; }

/* pre允许溢出滚动 */
pre {
  overflow: auto; }

/* 以下为排版样式 */
hr {
  height: 10px;
  margin-bottom: .8em;
  border: 0;
  border-bottom: 1px solid #cfcfcf; }

blockquote {
  position: relative;
  padding: 0 15px;
  margin: 15px 0;
  border-left: 4px solid #ddd;
  color: #999; }

/**
 * @file: 通用辅助工具类
 * @author: David
 */
/* ==========================================================================
   基础工具@basis
   ========================================================================== */
/**
 * 闭合浮动
 */
.u-clearfix {
  *zoom: 1; }
  .u-clearfix:before, .u-clearfix:after {
    content: "";
    display: table;
    line-height: 0; }
  .u-clearfix:after {
    clear: both; }

/* 浮动 */
.u-left {
  float: left;
  _display: inline; }

.u-right {
  float: right;
  _display: inline; }

/* 隐藏 */
.u-hide {
  display: none; }

/* ==========================================================================
   字体排版@type
   @字体策略参考：http://zenozeng.github.io/fonts.css/
   ========================================================================== */
/**
 * 文字溢出显示省略号,需指定宽度
 */
.u-ellipsis {
  display: block;
  width: auto;
  white-space: nowrap;
  word-wrap: normal;
  overflow: hidden;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
  text-align: left; }

/* 强制不换行 */
.u-nowrap {
  white-space: nowrap;
  word-wrap: normal;
  word-break: keep-all; }

/* 连续字符换行 */
.u-wrap {
  -ms-word-break: break-all;
  word-break: break-all;
  word-break: break-word; }

/**
 * 禁用中文输入法
 * @note: 仅 IE 5+，Firefox 3+ 支持
 * @doc:  https://developer.mozilla.org/en-US/docs/Web/CSS/ime-mode
 * 1. 默认关闭输入法，但用户还可以手动开启，Firefox Linux 版不支持。
*/
.u-imeInactive {
  ime-mode: inactive !important;
  /* 1 */ }

/**
 * OS X 字体平滑
 * 1. Fiefox 25 开始支持「-moz-osx-font-smoothing:auto(默认)|grayscale」
 */
.u-antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* 1 */ }

/**
 * 雅黑
 * 对于西文，OS X使用"Helvetica Neue", Helvetica； Windows使用Arial；
 */
.u-heiti {
  font-family: "Helvetica Neue", Helvetica, Arial, "PingFang sc", Lantinghei SC, "Microsoft YaHei", "Hiragino Sans GB", "Microsoft Sans Serif", "Wenquanyi Micro Hei", "ST Heiti", SimHei, sans-serif; }

/**
 * 宋体
 * 使用宋体时字号不宜超过14px，并且不宜设置字体平滑
 */
.u-songti {
  font-family: "Songti SC", STSong, SimSun, "WenQuanYi Bitmap Song", serif; }

/**
 * 楷体
 * 对于西文，使用Georgia
 */
.u-kaiti {
  font-family: Baskerville, Georgia, "Liberation Serif", "Kaiti SC", STKaiti, "AR PL UKai CN", "AR PL UKai HK", "AR PL UKai TW", "AR PL UKai TW MBE", "AR PL KaitiM GB", KaiTi, KaiTi_GB2312, "TW\-Kai", serif; }

/* 等宽字体 */
.u-monospace {
  font-family: Monaco, Menlo, Consolas, "Courier New", monospace; }

/* ==========================================================================
   通用组件@component
   @参考: Neat.css | MIT License
   ========================================================================== */
/**
 * @component: 消除空隙的inline-block
 * @usage: 结构如下
    <div class="u-inb">
        <span class="u-inb__item">xxx</span>
        <span class="u-inb__item">xxx</span>
        <span class="u-inb__item">xxx</span>
        <span class="u-inb__item">xxx</span>
    </div>
 * 1. 针对所有现代浏览器
 * 2. fixed IE6/7 1px
 * 3. fixed Safari 5- 等不支持 font-size: 0 的浏览器
 * 4. 字号大小
 */
.u-inb {
  font-size: 0;
  /* 1 */
  *word-spacing: -1px;
  /* 2 */ }

@media (-webkit-min-device-pixel-ratio: 0) {
  .u-inb {
    letter-spacing: -5px;
    /* 3 */ } }

.u-inb__item {
  display: inline-block;
  vertical-align: top;
  *vertical-align: auto;
  *display: inline;
  zoom: 1;
  font-size: 12px;
  /* 4 */
  letter-spacing: normal;
  word-spacing: normal;
  line-height: initial; }

/**
 * @component: 未知高度垂直居中组件，支持图片，单行或多行文字，以及图文混排
 * @usage: 结构如下
    <div class="u-center">
        <div class="u-center__inner">
            <p>xxxxxxx</p>
            <p>xxxxxxx</p>
        </div>
        <span class="u-center__hack"></span>
    </div>
 * 1. 继承父级高度
 * 2. 保证连续字符也能居中
 * 3. 防止设置边距导致居中失效
 * 4. 保证连续字符换行
 * 5. 保证文字垂直居中
 * 6. 使用空标签生成一个高度100%的参照元素
 */
.u-center {
  height: 100%;
  /* 1 */
  text-align: center;
  font-size: 0;
  *word-spacing: -1px; }

@media (-webkit-min-device-pixel-ratio: 0) {
  .u-center {
    letter-spacing: -5px; } }

.u-center__inner {
  width: 100%;
  /* 2 */
  padding: 0 !important;
  /* 3 */
  margin: 0 !important;
  font-size: 12px;
  letter-spacing: normal;
  word-spacing: normal;
  white-space: normal;
  /* 4 */
  word-wrap: break-word; }

.u-center__inner,
.u-center__hack {
  display: inline-block;
  *display: inline;
  *zoom: 1;
  vertical-align: middle;
  /* 5 */ }

/* 6 */
.u-center__hack {
  width: 0;
  height: 100%; }

/**
 * @component: 自适应两端对齐组件
 * @update: 2016-02-03 14:43:18
 * @usage: 结构如下
    <div class="u-justify">
        <span class="u-justify__item">欢</span>
        <span class="u-justify__item">聚</span>
        <span class="u-justify__item">时</span>
        <span class="u-justify__item">代</span>
    </div>
    1. 针对所有现代浏览器
    2. fixed IE6/7 1px
    3. for IE 6-7
    4. IE 6-7 触发 hasLayout 使一行也能两端对齐
    5. IE 8+
    6. 不支持 text-align-last 的浏览器用伪元素模拟
    7. margin-left:100% 仅 WebKit 支持
    8. fixed Safari 5- 等不支持 font-size: 0 的浏览器
    9. 子元素取消两端对齐
    10. 字号大小
 */
.u-justify {
  font-size: 0;
  /* 1 */
  *word-spacing: -1px;
  /* 2 */
  text-align: justify;
  text-justify: inter-ideograph;
  /* 3 */
  *zoom: 1;
  /* 4 */
  line-height: initial;
  -moz-text-align-last: justify;
  -webkit-text-align-last: justify;
  text-align-last: justify;
  /* 5 */
  /* 6 */ }
  .u-justify:after {
    content: "";
    display: inline-block;
    width: 100%;
    /* 7 */ }

@media (-webkit-min-device-pixel-ratio: 0) {
  .u-justify {
    letter-spacing: -5px;
    /* 8 */ } }

/* 9 */
.u-justify__item {
  display: inline-block;
  vertical-align: top;
  *vertical-align: auto;
  *display: inline;
  zoom: 1;
  font-size: 12px;
  /* 10 */
  letter-spacing: normal;
  word-spacing: normal;
  line-height: initial;
  -moz-text-align-last: auto;
  -webkit-text-align-last: auto;
  text-align-last: auto;
  text-justify: auto;
  text-align: left; }

/**
 * @component: CSS三角形
 */
.u-arrow {
  width: 0;
  height: 0;
  line-height: 0;
  overflow: hidden;
  display: inline-block;
  vertical-align: -2px;
  *vertical-align: auto;
  *display: inline;
  zoom: 1;
  border: 0 solid transparent;
  border-width: 6px;
  font-size: 0;
  /* ◤左上角 */
  /* ◥右上角 */
  /* ◣左下角 */
  /* ◢右下角 */ }
  .u-arrow.ext-top {
    border-bottom-style: solid;
    border-bottom-color: #666; }
  .u-arrow.ext-bottom {
    border-top-style: solid;
    border-top-color: #666; }
  .u-arrow.ext-left {
    border-right-style: solid;
    border-right-color: #666; }
  .u-arrow.ext-right {
    border-left-style: solid;
    border-left-color: #666; }
  .u-arrow.ext-leftTop {
    border-top-style: solid;
    border-top-color: #666;
    border-left-width: 0 !important; }
  .u-arrow.ext-rightTop {
    border-top-style: solid;
    border-top-color: #666;
    border-right-width: 0 !important; }
  .u-arrow.ext-leftBtm {
    border-bottom-style: solid;
    border-bottom-color: #666;
    border-left-width: 0 !important; }
  .u-arrow.ext-rightBtm {
    border-bottom-style: solid;
    border-bottom-color: #666;
    border-right-width: 0 !important; }

.test-3 {
  width: 200px;
  height: 200px;
  background-image: url("../img/slice/3.png");
  background-size: contain;
  background-repeat: no-repeat; }

.test-2 {
  width: 258px;
  height: 258px;
  background-image: url("../img/base64/2.png");
  background-size: contain;
  background-repeat: no-repeat; }

.test-1 {
  width: 259px;
  height: 260px;
  background-image: url("../img/1.png");
  background-size: contain;
  background-repeat: no-repeat; }

.png.test-1 {
  width: 259px;
  height: 260px;
  background-image: url("../img/1.png");
  background-size: contain;
  background-repeat: no-repeat; }

.test-4 {
  width: 180px;
  height: 180px;
  background-image: url("../img/slice/4.png");
  background-size: contain;
  background-repeat: no-repeat; }

body {
  font: 300 12px/1.5 "San Francisco", "Helvetica Neue", Helvetica, Arial, "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei", "WenQuanYi Micro Hei", sans-serif;
  color: #333; }
  body a {
    text-decoration: none;
    color: #333; }
    body a:hover {
      text-decoration: underline;
      color: #fa0; }

html, body {
  width: 100%;
  height: 100%; }

p {
  margin-top: 20px;
  border-top: 1px solid #CCC;
  font-size: 18px;
  font-weight: 600; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
